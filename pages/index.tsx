import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [color, setColor] = useState<string[]>([]);
  const [win, setWin] = useState(false);

  const createRandomColor = () => {
    let temp = [];
    for (let i = 0; i < 3; i++) {
      let n = (Math.random() * 0xffffff * 1000000).toString(16);
      let hex = "#" + n.slice(0, 6);
      temp.push(hex);
    }
    setColor(temp);
  };

  const random = (min: number, max: number): number => {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  };

  useEffect(() => {
    createRandomColor();
  }, []);

  const getBGColor = (e: any) => {
    const element = document.getElementById("main");
    let bgColorRBG = element?.style.backgroundColor;
    let test = bgColorRBG?.replace("rgb(", "").replace(")", "").split(",");
    let colHex = "";
    if (test !== undefined) {
      var r = parseInt(test[0], 10).toString(16);
      var g = parseInt(test[1], 10).toString(16);
      var b = parseInt(test[2], 10).toString(16);
      r = r.length == 1 ? "0" + r : r;
      g = g.length == 1 ? "0" + g : g;
      b = b.length == 1 ? "0" + b : b;
      colHex = "#" + r + g + b;
    }
		console.log(bgColorRBG)
    console.log(e.target.innerHTML);
    if (e.target.innerHTML == colHex) {
      setWin(true);
    } else {
      // setWin(false);
      // TODO: ADD SHAKING
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <canvas></canvas>
      <div
        id="main"
        className={styles.main}
        style={{ backgroundColor: color[random(1, 3)] }}
      ></div>

      <div className={styles.buttons_div}>
        {color.map((color, key) => {
          return (
            <button key={key} onClick={(e) => getBGColor(e)}>
              {color}
            </button>
          );
        })}
      </div>

      {win && (
        <button onClick={() => createRandomColor()}>
          You won click for go next
        </button>
      )}
    </div>
  );
};

export default Home;
